name: CD to NPM & AWS S3

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm i
  dockerhub:

    permissions:
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        id: get_version
        run: cat packages/cli/package.json | jq -r '.version'

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          # labels: |
          #   org.opencontainers.image.version=v1.0
          tags: |
            latest
            
          images: | 
            igork00/docker_demo
            ghcr.io/igorkarpiuk/demo2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ECHO
        run: | 
          echo "${{ secrets.GITHUB_TOKEN }}"
          echo
          echo '${{ steps.docker_meta.outputs.labels }}'
          echo
          echo '${{ steps.docker_meta.outputs.tags }}'
          echo
          echo '${{ steps.get_version.outputs }}'

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

